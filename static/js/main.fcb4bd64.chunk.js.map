{"version":3,"sources":["Helpers/Contexts.js","Helpers/QuestionBank.js","components/EndScreen.js","components/MainMenu.js","components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["QuizContext","createContext","Questions","prompt","optionA","optionB","optionC","optionD","answer","EndScreen","useContext","score","setScore","setGameState","className","length","onClick","MainMenu","gameState","Quiz","useState","currentQuestion","setCurrentQuestion","optionChosen","setOptionChosen","App","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKAEaA,G,KAAcC,2BCFdC,EAAY,CACvB,CACEC,OAAQ,mBACRC,QAAS,OACTC,QAAS,OACTC,QAAS,OACTC,QAAS,QACTC,OAAQ,KAEV,CACEL,OAAQ,+CACRC,QAAS,SACTC,QAAS,aACTC,QAAS,QACTC,QAAS,OACTC,OAAQ,KAEV,CACEL,OAAQ,+CACRC,QAAS,QACTC,QAAS,UACTC,QAAS,MACTC,QAAS,OACTC,OAAQ,M,OCFGC,EAlBG,WAChB,MAA0CC,qBAAWV,GAA7CW,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,aAMzB,OACE,sBAAKC,UAAU,YAAf,UACE,+CACA,+BACGH,EADH,IACWT,EAAUa,UAErB,wBAAQC,QAVQ,WAClBJ,EAAS,GACTC,EAAa,SAQX,8BCJSI,EATE,WACf,MAAoCP,qBAAWV,GAA5Ba,GAAnB,EAAQK,UAAR,EAAmBL,cACnB,OACE,qBAAKC,UAAU,OAAf,SACE,wBAAQE,QAAS,kBAAMH,EAAa,SAApC,2BC2CSM,EA9CF,WACX,MAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEA,EAA0Cd,qBAAWV,GAA7CW,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,aAezB,OACE,sBAAKC,UAAU,OAAf,UACE,6BAAKZ,EAAUmB,GAAiBlB,SAChC,sBAAKW,UAAU,UAAf,UACE,wBAAQE,QAAS,kBAAMQ,EAAgB,MAAvC,SACGtB,EAAUmB,GAAiBjB,UAE9B,wBAAQY,QAAS,kBAAMQ,EAAgB,MAAvC,SACGtB,EAAUmB,GAAiBhB,UAE9B,wBAAQW,QAAS,kBAAMQ,EAAgB,MAAvC,SACGtB,EAAUmB,GAAiBf,UAE9B,wBAAQU,QAAS,kBAAMQ,EAAgB,MAAvC,SACGtB,EAAUmB,GAAiBd,aAI/Bc,GAAmBnB,EAAUa,OAAS,EACrC,wBAAQC,QAzBK,WACbd,EAAUmB,GAAiBb,SAAWe,GACxCX,EAASD,EAAQ,GAEnBE,EAAa,cAqBT,yBAEA,wBAAQG,QAlCO,WACfd,EAAUmB,GAAiBb,SAAWe,GACxCX,EAASD,EAAQ,GAEnBW,EAAmBD,EAAkB,IA8BjC,+BCnBOI,MAjBf,WACE,MAAkCL,mBAAS,QAA3C,mBAAOF,EAAP,KAAkBL,EAAlB,KACA,EAA0BO,mBAAS,GAAnC,mBAAOT,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKE,UAAU,MAAf,UACE,0CACA,eAACd,EAAY0B,SAAb,CACEC,MAAO,CAAET,YAAWL,eAAcF,QAAOC,YAD3C,UAGiB,SAAdM,GAAwB,cAAC,EAAD,IACV,SAAdA,GAAwB,cAAC,EAAD,IACV,cAAdA,GAA6B,cAAC,EAAD,WCPvBU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fcb4bd64.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const QuizContext = createContext();\r\n","export const Questions = [\r\n  {\r\n    prompt: \"What is my name?\",\r\n    optionA: \"John\",\r\n    optionB: \"Jake\",\r\n    optionC: \"Josh\",\r\n    optionD: \"Pedro\",\r\n    answer: \"D\",\r\n  },\r\n  {\r\n    prompt: \"Which of this is not a programming language?\",\r\n    optionA: \"Python\",\r\n    optionB: \"JavaScript\",\r\n    optionC: \"MC-03\",\r\n    optionD: \"Java\",\r\n    answer: \"C\",\r\n  },\r\n  {\r\n    prompt: \"Which of this is not a javascript framework?\",\r\n    optionA: \"React\",\r\n    optionB: \"Angular\",\r\n    optionC: \"Vue\",\r\n    optionD: \"Java\",\r\n    answer: \"D\",\r\n  },\r\n];\r\n","import React, { useContext } from \"react\";\r\nimport { QuizContext } from \"../Helpers/Contexts\";\r\nimport { Questions } from \"../Helpers/QuestionBank\";\r\nconst EndScreen = () => {\r\n  const { score, setScore, setGameState } = useContext(QuizContext);\r\n\r\n  const restartQuiz = () => {\r\n    setScore(0);\r\n    setGameState(\"menu\");\r\n  };\r\n  return (\r\n    <div className=\"EndScreen\">\r\n      <h1>Quiz Finished</h1>\r\n      <h3>\r\n        {score}/{Questions.length}\r\n      </h3>\r\n      <button onClick={restartQuiz}>Restart Quiz</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndScreen;\r\n","import React, { useContext } from \"react\";\r\nimport { QuizContext } from \"../Helpers/Contexts\";\r\n\r\nconst MainMenu = () => {\r\n  const { gameState, setGameState } = useContext(QuizContext);\r\n  return (\r\n    <div className=\"Menu\">\r\n      <button onClick={() => setGameState(\"quiz\")}>Start Quiz</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainMenu;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Questions } from \"../Helpers/QuestionBank\";\r\nimport { QuizContext } from \"../Helpers/Contexts\";\r\n\r\nconst Quiz = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [optionChosen, setOptionChosen] = useState(\"\");\r\n\r\n  const { score, setScore, setGameState } = useContext(QuizContext);\r\n\r\n  const nextQuestion = () => {\r\n    if (Questions[currentQuestion].answer === optionChosen) {\r\n      setScore(score + 1);\r\n    }\r\n    setCurrentQuestion(currentQuestion + 1);\r\n  };\r\n\r\n  const finishQuiz = () => {\r\n    if (Questions[currentQuestion].answer === optionChosen) {\r\n      setScore(score + 1);\r\n    }\r\n    setGameState(\"endscreen\");\r\n  };\r\n  return (\r\n    <div className=\"Quiz\">\r\n      <h1>{Questions[currentQuestion].prompt}</h1>\r\n      <div className=\"options\">\r\n        <button onClick={() => setOptionChosen(\"A\")}>\r\n          {Questions[currentQuestion].optionA}\r\n        </button>\r\n        <button onClick={() => setOptionChosen(\"B\")}>\r\n          {Questions[currentQuestion].optionB}\r\n        </button>\r\n        <button onClick={() => setOptionChosen(\"C\")}>\r\n          {Questions[currentQuestion].optionC}\r\n        </button>\r\n        <button onClick={() => setOptionChosen(\"D\")}>\r\n          {Questions[currentQuestion].optionD}\r\n        </button>\r\n      </div>\r\n\r\n      {currentQuestion == Questions.length - 1 ? (\r\n        <button onClick={finishQuiz}>Finish Quiz</button>\r\n      ) : (\r\n        <button onClick={nextQuestion}>Next Question</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import { useState, useContext } from \"react\";\nimport \"./App.css\";\nimport EndScreen from \"./components/EndScreen\";\nimport MainMenu from \"./components/MainMenu\";\nimport Quiz from \"./components/Quiz\";\n\nimport { QuizContext } from \"./Helpers/Contexts\";\n\nfunction App() {\n  const [gameState, setGameState] = useState(\"menu\");\n  const [score, setScore] = useState(0);\n  return (\n    <div className=\"App\">\n      <h1>Quiz App</h1>\n      <QuizContext.Provider\n        value={{ gameState, setGameState, score, setScore }}\n      >\n        {gameState === \"menu\" && <MainMenu />}\n        {gameState === \"quiz\" && <Quiz />}\n        {gameState === \"endscreen\" && <EndScreen />}\n      </QuizContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}